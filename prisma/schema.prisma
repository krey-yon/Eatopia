// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  RIDER
  RESTAURANT
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model User {
  id          String       @id @default(uuid())
  role        ROLE
  name        String
  email       String       @unique
  password    String?
  address     String
  restaurants Restaurant[]
  orders      Order[]
  deliveries  Order[]      @relation("OrderRider")
  sessions    Session[]
}

model Restaurant {
  id       String  @id @default(uuid())
  name     String
  address  String
  owner    User    @relation(fields: [ownerId], references: [id])
  imageUrl String?
  cuisine  String
  ownerId  String
  menus    Menu[]
  orders   Order[]
}

model Menu {
  id           String      @id @default(uuid())
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId String
  menuItems    MenuItems[]
}

model MenuItems {
  id       String @id @default(uuid())
  name     String
  price    Int
  imageUrl String
  menuId   String
  menu     Menu   @relation(fields: [menuId], references: [id])
}

model Order {
  id           String      @id @default(uuid())
  status       String
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  rider        User?       @relation(name: "OrderRider", fields: [riderId], references: [id])
  riderId      String?
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId String
  orderItems   OrderItem[]
}

model OrderItem {
  id      String @id @default(uuid())
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String
  name       String
  price      Float
}
